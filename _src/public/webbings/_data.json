{
    "finds": [
        {
            "title": "Harp",
            "url": "http://harpjs.com/",
            "description": "Static site generator with a collection of front end build tools built in (and server if you want it). This site is built with Harp! All that's missing from my static site knowledge is a good admin technology for non tech users. Once that's figured out there are going to be some phenomenal speed gains around this internet."
        },
        {
            "title": "Docker",
            "url": "https://www.docker.com/",
            "description": "I'm on a constant campaign to get everyone I work with onto Docker, don't throw away time by making people manually set up complex projects - Dockerize it! Although caveat, I've found front end build tools are more easily managed on your host system, especially when you're the one setting those build systems up."
        },
        {
            "title": "Let's Encrypt",
            "url": "https://letsencrypt.org/",
            "description": "SSL (HTTPS) certs aren't hard and they don't cost money (unless you want a fancy one) - so there's no excuse, HTTPS all your sites!"
        },
        {
            "title": "Markdown",
            "url": "https://en.wikipedia.org/wiki/Markdown#Example",
            "description": "If you are creating content for a website, kill your wordprecessor, they do unspeakable things to the formatting of your words. Learn markdown (it's really simple), find a Markdown editor that clicks for you, and use it. Your writing will be more consistent and, very important this part, it translates directly to html - perfect!"
        },
        {
            "title": "NPM scripts",
            "url": "https://docs.npmjs.com/misc/scripts",
            "description": "Another work campaign I'm on - every front end development project should install with `npm install`, start the build tools & watchers with `npm start`, and compile a production build with `npm run build`. It's completely up to you to choose which build tools are run. I'm not saying drop them and just use npm scripts, I'm saying run them with the one thing that is common to every project. Be consistent!"
        },
        {
            "title": "ESLint",
            "url": "https://eslint.org/",
            "description": "There are projects out there that still have a code style guide in document form - hilarious no?"
        },
        {
            "title": "Sass Lint",
            "url": "https://github.com/sasstools/sass-lint",
            "description": "Because linting is always a good thing."
        },
        {
            "title": "Pa11y",
            "url": "http://pa11y.org/",
            "description": "In my experience accessibility is like code style in that they're both treated as 2nd class concerns far too often. Work this into your build tools and have it yell a11y concerns at you - it's really worth it!"
        },
        {
            "title": "display: table;",
            "url": "https://www.google.com/search?q=css+display+table",
            "description": "I don't know why it seems so many developers are still against this. It's very good. Combine it with `table-layout: fixed;` and it's pretty much magic. So I'm adding it here in support. I like `display: table;`"
        }
    ]
}